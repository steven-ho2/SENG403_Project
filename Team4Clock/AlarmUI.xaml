<UserControl x:Class="Team4Clock.AlarmUI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Team4Clock"
             mc:Ignorable="d" BorderBrush="White">
    <UserControl.Resources>
      
    </UserControl.Resources>
    <Grid>

        <Rectangle HorizontalAlignment="Left" Height="125" VerticalAlignment="Top" Width="446" Stroke="#FFF1ECEC"/>

    <UserControl.Resources>
        <!-- This style is used for buttons, to remove the WPF default 'animated' mouse over effect -->
        <Style x:Key="MyButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1"
                            Padding="4,2" 
                            BorderBrush="DarkGray" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AnimatedSwitch" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="#FAFAFB" />
            <Setter Property="BorderBrush" Value="#EAEAEB" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Viewbox Stretch="Uniform">
                            <Canvas Name="Layer_1" Width="20" Height="20" Canvas.Left="10" Canvas.Top="0">
                                <Ellipse  Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                                <Ellipse  Canvas.Left="15" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                                <Border Canvas.Left="10" Width="15" Height="20" Name="rect416927" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0.5"/>
                                <Ellipse x:Name="ellipse"  Canvas.Left="0" Width="20" Height="20" Fill="White" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.3">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform X="0" Y="0" />
                                    </Ellipse.RenderTransform>
                                    <Ellipse.BitmapEffect>
                                        <DropShadowBitmapEffect Softness="0.1" ShadowDepth="0.7" Direction="270" Color="#BBBBBB"/>
                                    </Ellipse.BitmapEffect>
                                </Ellipse>
                            </Canvas>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True" >
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#52D468" Duration="0:0:0.2" />
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#41C955" Duration="0:0:0.2" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="15" KeySpline="0, 1, 0.6, 1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FAFAFB" Duration="0:0:0.2" />
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#EAEAEB" Duration="0:0:0.2" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="15"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
        <Label x:Name="alarmTime" Height="70" Canvas.Left="10" Foreground="White"  Canvas.Top="10" Margin="10,10,62.4,45" HorizontalContentAlignment="Center" FontSize="29.333"
               Content="{Binding Path=a.display}"/>
        <Button x:Name="cancelBtn" Content="X" Background="Red" Height="39" Canvas.Left="338" Canvas.Top="10" Width="47" Click="cancelBtn_Click" Margin="389,10,10.4,76"/>
        <Button x:Name="editBtn" Content="Edit" Background="DimGray" Height="41" Canvas.Left="338" Canvas.Top="63" Width="47" Click="editBtn_Click" Margin="389,74,10.4,10"/>
        <Label x:Name="infoString"  Height="70" Canvas.Left="10" Foreground="White" Canvas.Top="10" Margin="39,73,33,-18" HorizontalContentAlignment="Center" FontSize="20" RenderTransformOrigin="0.5,0.643"
               Content="{Binding Path=a.info}"/>
        <CheckBox Style="{DynamicResource MetroCircleToggleButtonStyle}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Content="&#x23F0;" Width="50" Height="50" FontSize="20" 
                  x:Name="testBox" IsChecked="{Binding Path=a.on, Mode=TwoWay}" Click="toggle_Click" Margin="10,40,386,35"/>
        <ToggleButton Style="{StaticResource AnimatedSwitch}" Height="40" Click="onOffBtn_Click" Margin="-191,75,191,10"/>

        <Rectangle HorizontalAlignment="Left" Height="125" VerticalAlignment="Top" Width="446" Stroke="#FFF1ECEC"/>
        <Label x:Name="alarmTime" Height="70" Canvas.Left="10" Foreground="White" Canvas.Top="10" Margin="10,10,62.4,45" HorizontalContentAlignment="Center" FontSize="29.333"/>
        <Button x:Name="cancelBtn" Style="{DynamicResource MetroCircleButtonStyle}" Content="X" Background="Red" Canvas.Left="338" Canvas.Top="10" Click="cancelBtn_Click" Margin="384,4,10,72" Foreground="White" BorderBrush="White" FontSize="16" FontWeight="Bold"/>
        <Button x:Name="editBtn"  Style="{DynamicResource MyButtonStyle}" Content="Edit" Click="editBtn_Click" Foreground="White" BorderBrush="White" FontSize="24" Margin="375,70,10,10" Background="{x:Null}" FontWeight="Bold"/>
        <Button x:Name="onOffBtn" Style="{DynamicResource MyButtonStyle}" Content="OFF" Canvas.Left="10" Canvas.Top="93" Foreground="White" Margin="86,80,301,16" FontSize="18.667" FontWeight="Bold"/>
    </Grid>
</UserControl>
